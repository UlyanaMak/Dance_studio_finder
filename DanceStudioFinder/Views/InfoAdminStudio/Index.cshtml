@model DanceStudioFinder.ViewModels.AdminStudioDetailsViewModel
@{
    ViewData["Title"] = "Данные студии";
}
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Поиск танцевальных студий</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/adminStudio.css" asp-append-version="true" />
</head>

@section AdminInfo {

    @($"Администратор: {Model.Admin.Name} {Model.Admin.Surname}")

    <button type="button" id="update" class="main-button" data-bs-toggle="modal" data-bs-target="#editAdminModal">
        Редактировать
    </button>
    <button type="button" id="deleteAdmin" class="main-button" data-bs-toggle="modal" data-bs-target="#deleteAdminModal">
        Удалить
    </button>
}

@section HeaderButtons {
    <!--Удаление студии-->
    <button type="button" id="buttonToUpdate" class="main-button" onclick="location.href ='@Url.Action("UpdateStudio", "InfoAdminStudio", new { adminId = Model.Admin.IdAdmin })'">
        Редактировать данные студии
    </button>
    <button type="button" id="buttonToDelete" class="main-button" data-bs-toggle="modal" data-bs-target="#deleteStudioModal">
        Удалить студию
    </button>
    <!--Выход на главную страницу-->
    <input class="main-button" type="submit" onclick="location.href ='@Url.Action("Index", "Home")'" value="Выйти" />
}

<!-- Модальное окно подтверждения удаления студии -->
<div class="modal fade" id="deleteStudioModal" tabindex="-1" aria-labelledby="deleteStudioLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <form asp-action="DeleteStudio" asp-controller="InfoAdminStudio">
                <input type="hidden" asp-for="Admin.IdAdmin" />  <!--Скрытое поле для сохраненя id админа-->
                <div class="modal-header">
                    <h5 class="modal-title" id="editAdminLabel">Подтверждение удаления студии</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                </div>
                <div class="modal-body">
                    <p class="text" style="color: black">Удаление данных танцевальной студии из системы приводит к удалению всех данных студии, закрепленной за администратором</p>
                    <br />
                    <p class="text" style="color: black">Все данные о танцевальной студии можно будет заполнить заново после удаления</p>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-primary enter-registration-button" onclick="location.href ='@Url.Action("DeleteStudio", "InfoAdminStudio", new { adminId = Model.Admin.IdAdmin })'">Удалить</button>
                </div>
            </form>

        </div>
    </div>
</div>


<!-- Модальное окно редактирования администратора -->
<div class="modal fade" id="editAdminModal" tabindex="-1" aria-labelledby="editAdminLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            
            <form method="post" asp-action="UpdateAdmin" asp-controller="InfoAdminStudio">
                <input type="hidden" asp-for="Admin.IdAdmin" />  <!--Скрытое поле для сохраненя id админа-->
                <div class="modal-header">
                    <h5 class="modal-title" id="editAdminLabel">Редактирование администратора</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="IdAdmin" value="@Model.Admin.IdAdmin" />

                    <div class="form-floating mb-3 validation">
                        <input asp-for="Admin.Name" type="text" style="border: 1px solid #C8DE9D;" class="form-control" id="nameInput" placeholder="Имя">
                        <label for="floatingInput" style="color: #BABABA;">Имя</label>
                        <span asp-validation-for="Admin.Name" class="text-danger"></span>
                    </div>

                    <div class="form-floating mb-3 validation">
                        <input asp-for="Admin.Surname" type="text" style="border: 1px solid #C8DE9D;" class="form-control" id="surnameInput" placeholder="Фамилия">
                        <label for="floatingInput" style="color: #BABABA;">Фамилия</label>
                        <span asp-validation-for="Admin.Surname" class="text-danger"></span>
                    </div>

                    <div class="form-floating mb-3 validation">
                        <input asp-for="Admin.Email" type="text" style="border: 1px solid #C8DE9D;" class="form-control" id="emailInput" placeholder="Электронная почта">
                        <label for="floatingInput" style="color: #BABABA;">Электронная почта</label>
                        <span asp-validation-for="Admin.Email" class="text-danger"></span>
                    </div>

                    <!-- Пароль не редактируется -->
                    <p class="text-muted">Пароль изменить нельзя</p>
                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary enter-registration-button">Сохранить</button>
                </div>
            </form>

        </div>
    </div>
</div>

<!-- Модальное окно подтверждения удаления администратора -->
<div class="modal fade" id="deleteAdminModal" tabindex="-1" aria-labelledby="deleteAdminLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <form asp-action="DeleteAdmin" asp-controller="InfoAdminStudio">
                <input type="hidden" asp-for="Admin.IdAdmin" />  <!--Скрытое поле для сохраненя id админа-->
                <div class="modal-header">
                    <h5 class="modal-title" id="editAdminLabel">Подтверждение удаления администратора</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                </div>
                <div class="modal-body">
                    <p class="text" style="color: black">Удаление данных администратора из системы приводит к удалению всех данных о студии, которая за ним закреплена</p>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-primary enter-registration-button" onclick="location.href ='@Url.Action("DeleteAdmin", "InfoAdminStudio", new { adminId = Model.Admin.IdAdmin })'">Удалить</button>
                </div>
            </form>

        </div>
    </div>
</div>

<div class="studio-container">
    <h2 class="studio-name">@Model.Studio.Name</h2>

    <!-- Адрес -->
    <div class="mb-4">
        <p class="studio-address">
            @Model.Studio.IdAddressNavigation.Entity,
            @Model.Studio.IdAddressNavigation.Locality,
            @if (!string.IsNullOrEmpty(Model.Studio.IdAddressNavigation.SettlementArea))
            {
                @($"{Model.Studio.IdAddressNavigation.SettlementArea}, ")
            }
            ул. @Model.Studio.IdAddressNavigation.Street,
            @Model.Studio.IdAddressNavigation.BuildingNumber
            @if (!string.IsNullOrEmpty(Model.Studio.IdAddressNavigation.Letter))
            {
                @Model.Studio.IdAddressNavigation.Letter
            }
        </p>
    </div>

    <hr style="border: 2px solid #C8DE9D; margin-bottom: 10px; margin-top: 10px" />

    <!-- Контакты -->
    <div class="mb-4">
        <p class="phone-number">+7 (@Model.Studio.PhoneNumber.Substring(0, 3)) @Model.Studio.PhoneNumber.Substring(3, 3)-@Model.Studio.PhoneNumber.Substring(6, 2)-@Model.Studio.PhoneNumber.Substring(8)</p>
        @if (!string.IsNullOrEmpty(Model.Studio.ExtraPhoneNumber))
        {
            <p class="phone-number">+7 (@Model.Studio.ExtraPhoneNumber.Substring(0, 3)) @Model.Studio.ExtraPhoneNumber.Substring(3, 3)-@Model.Studio.ExtraPhoneNumber.Substring(6, 2)-@Model.Studio.ExtraPhoneNumber.Substring(8)</p>
        }

        @if (!string.IsNullOrEmpty(Model.Studio.VkGroup) || !string.IsNullOrEmpty(Model.Studio.Telegram) || !string.IsNullOrEmpty(Model.Studio.Website))
        {
            @* <h3 class="field-label">Ссылки на социальные сети</h3> *@
            @if (!string.IsNullOrEmpty(Model.Studio.VkGroup))
            {
                <p class="link" style="font-family: Times New Roman, sans-serif;">ВКонтакте: <a href="@Model.Studio.VkGroup" target="_blank">@Model.Studio.VkGroup</a></p>
            }
            @if (!string.IsNullOrEmpty(Model.Studio.Telegram))
            {
                <p class="link" style="font-family: Times New Roman, sans-serif;">Telegram: <a href="@Model.Studio.Telegram" target="_blank">@Model.Studio.Telegram</a></p>
            }
            @if (!string.IsNullOrEmpty(Model.Studio.Website))
            {
                <p class="link" style="font-family: Times New Roman, sans-serif;">Сайт: <a href="@Model.Studio.Website" target="_blank">@Model.Studio.Website</a></p>
            }
        }
    </div>

    <hr style="border: 2px solid #C8DE9D; margin-bottom: 10px; margin-top: 10px" />

    <!-- Цены -->
    <h3 class="field-label">Цены</h3>

    @{

        if (Model != null && Model.Prices.Any())
        {
            foreach (var price in Model.Prices)
            {
                <div class="price-item">
                    <span class="price-description">@price.Description</span>
                    @if (price.Price1 == 0)
                    {
                        <span class="price-value">бесплатно</span>
                    }
                    else
                    {
                        <span class="price-value">@price.Price1</span>
                    }
                </div>
            }
        }
    }


    <hr style="border: 2px solid #C8DE9D; margin-bottom: 10px; margin-top: 10px" />

    <!-- Группы -->
    @{
        var allTimes = Model.Groups  //все отрезки времени
        .SelectMany(g => g.Schedule)
        .Select(s => new { Start = s.BeginTime, End = s.EndTime })
        .Distinct()
        .OrderBy(t => t.Start)
        .ToList();

        var weekDays = Model.WeekDays.OrderBy(d => d.IdDay).ToList(); //извлечение дней недели из БД
    }

    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
        <h3 class="field-label" style="margin: 0;">Расписание групповых занятий</h3>
        <div style="display: flex;">
            <input type="button" class="export-button" onclick="location.href='@Url.Action("ExportToWord", "StudioDetails", new { id = Model.Studio.IdStudio })'" value="Загрузить в формате Word" />
        </div>
    </div>


    <div class="table-responsive">
        <table class="table table-bordered text-center align-middle schedule-table">
            <thead class="table-primary">
                <tr>
                    <th class="time-column" style="
                        font-family: 'Times New Roman', sans-serif;
                        background-color: #F2FCC6;
                        vertical-align: middle;
                        text-align: center;
                        height: 40px;
                        line-height: 40px;">Время</th>
                    @foreach (var day in weekDays)
                    {
                        <th class="day-header">@day.Name</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var timeSlot in allTimes)
                {
                    <tr>
                        <td class="time-slot bg-light fw-bold">
                            @timeSlot.Start.ToString("HH:mm") – @timeSlot.End.ToString("HH:mm")
                        </td>

                        @foreach (var day in weekDays)
                        {
                            var groupsInSlot = Model.Groups
                            .Where(g => g.Schedule.Any(s =>
                            s.Day.IdDay == day.IdDay &&
                            s.BeginTime == timeSlot.Start &&
                            s.EndTime == timeSlot.End))
                            .ToList();

                            <td class="schedule-cell">
                                @foreach (var group in groupsInSlot)
                                {
                                    <div style="text-align: center; margin-bottom: 8px; font-family: 'Times New Roman', sans-serif;">
                                        <div style="font-weight: bold;">@group.Name</div>
                                        <div style="color: black; font-family: 'Times New Roman', sans-serif; font-size: 0.875em;">
                                            @(group.Style.NameEng != null && group.Style.NameRus != null
                                                ? $"{group.Style.NameEng} ({group.Style.NameRus})"
                                                : group.Style.NameEng ?? group.Style.NameRus)
                                        </div>
                                        <div style="color: black; font-family: 'Times New Roman', sans-serif; font-size: 0.875em;">@group.AgeLimit.Name</div>
                                    </div>
                                }
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
<script>
    $(document).ready(function () {  //сохранение данных при закрытии окна
        //сохранение исходного значения при загрузке
        const originalValues = {
            name: $('#nameInput').val(),
            surname: $('#surnameInput').val(),
            email: $('#emailInput').val()
        };

        //обработчик закрытия модального окна
        $('#editAdminModal').on('hidden.bs.modal', function () {
            //восстанавление исходного значения
            $('#nameInput').val(originalValues.name);
            $('#surnameInput').val(originalValues.surname);
            $('#emailInput').val(originalValues.email);

            //очищение об ошибках валидации
            $('.text-danger').text('');
            $('.validation').removeClass('is-invalid');
        });

        //обработчик отправки формы
        $('#adminForm').submit(function (e) {
            //обновление при успешном сохранении
            originalValues.name = $('#nameInput').val();
            originalValues.surname = $('#surnameInput').val();
            originalValues.email = $('#emailInput').val();
        });
    });
</script>